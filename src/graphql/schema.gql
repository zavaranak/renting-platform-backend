# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type LandlordAttribute {
  id: String!
  name: LandlordAttributeNames!
  value: String!
  landlord: Landlord!
}

enum LandlordAttributeNames {
  FIRSTNAME
  LASTNAME
  MIDDLENAME
  TEL
  COMPANY
  BIRTH_DAY
  AVATAR
  DOCUMENT
  COUNTRY
}

type Landlord {
  id: String!
  username: String!
  password: String!
  createdAt: Float!
  status: String!
  places: [Place!]!
  attributes: [LandlordAttribute!]
}

type PlaceAttribute {
  id: String!
  name: PlaceAttributeNames!
  valueNumber: Float!
  place: Place!
}

enum PlaceAttributeNames {
  PRIVATE_BATHROOM
  PRIVATE_KITCHEN
  SHARED_BATHROOM
  SHARED_KITCHEN
  LAUNDRY
  AIR_CONDITIONER
  WIFI
  ETHERNET
  FURNISHED
  PARKING
  BALCONY
  PET_FRIENDLY
  SMOKING_ALLOWED
  ELEVATOR
  GYM
  POOL
  HEATING
  ROOM_SERVICE
  SECURITY
  GARDEN
  PLAYGROUND
  PRICE_BY_HOUR
  PRICE_BY_DAY
  PRICE_BY_WEEK
  PRICE_BY_MONTH
  MAX_GUEST
}

type Place {
  id: String!
  name: String!
  address: String!
  city: String!
  country: String!
  type: [PlaceTypes!]!
  termUnit: [TermUnit!]!
  area: Float!
  createdAt: Float!
  lastUpdate: Float!
  rating: Float!
  photos: [String!]
  status: PlaceStatus!
  landlord: Landlord!
  bookings: [Booking!]
  attributes: [PlaceAttribute!]
}

enum PlaceTypes {
  HOUSE
  APARTMENT
  DORMITORY
  STUDIO
  HOTEL
  OFFICE
  WORKSHOP
  FACTORY
  WAREHOURSE
  SHOPHOUSE
  COWORKING_SPACE
  EVENT_SPACE
}

enum TermUnit {
  HOUR
  DAY
  WEEK
  MONTH
  YEAR
}

enum PlaceStatus {
  FOR_RENT
  NOT_FORENT
  OCCUPIED
}

type BookingReview {
  id: String!
  star: Float!
  reviewText: String!
  reviewPhotos: [String!]
  createdAt: Float!
  tenant: Tenant!
  booking: Booking!
}

type Booking {
  id: String!
  createdAt: Float!
  lastUpdate: Float!
  startAt: Float!
  endAt: Float!
  termUnit: String!
  period: Float!
  status: BookingStatus!
  totalCharge: Float!
  tenant: Tenant!
  place: Place!
  reviews: [BookingReview!]
}

enum BookingStatus {
  VERIFIED
  IN_PROCESS
  CANCELED
}

type TenantAttribute {
  id: String!
  name: TenantAttributeNames!
  value: String!
  type: String!
  tenant: Tenant!
}

enum TenantAttributeNames {
  FIRSTNAME
  LASTNAME
  MIDDLENAME
  TEL
  SEX
  BIRTH_DAY
  DOCUMENT
  COUNTRY
  AVATAR
}

type Tenant {
  id: String!
  username: String!
  password: String
  createdAt: Float!
  status: String!
  bookings: [Booking!]
  attributes: [TenantAttribute!]
}

type QueryResponse {
  message: String!
  tenant: Tenant
  landlord: Landlord
  place: Place
  booking: Booking
  bookingReview: BookingReview
  type: ActionStatus
}

enum ActionStatus {
  SUCCESSFUL
  FAILED
}

type AuthResponse {
  message: String
  tenant: Tenant
  landlord: Landlord
  access_token: String
}

type Query {
  getTenants(conditions: [Condition!]! = []): [Tenant!]!
  getOneTenant(value: String!, type: String!): Tenant!
  getOneLandlord(value: String!, type: String!): Landlord!
  getLandlords(conditions: [Condition!]! = []): [Landlord!]!
  getOneBooking(value: String!, type: String!): Booking!
  getBookings(conditions: [Condition!]! = []): [Booking!]!
  getOnePlace(value: String!, type: String!): Place!
  getPlaces(conditions: [Condition!]! = []): [Place!]!
}

input Condition {
  key: String!
  value: String!
  operator: operator!
}

enum operator {
  EQUAL
  GREATER
  SMALLER
  GREATER_AND_EQUAL
  SMALLER_AND_EQUAL
}

type Mutation {
  logIn(userInput: UserInput!): AuthResponse!
  signUp(userInput: UserInput!): AuthResponse!
  addTenantAtributes(tenantId: String!, attributesInput: [TenantAttributeInput!]!): QueryResponse!
  removeTenantAttributes(attributeIds: [String!]!): QueryResponse!
  updateTenantAttributes(attibuteUpdateInput: [AttributeUpdateInput!]!): QueryResponse!
  setTenantAvatar(tenantId: String!, image: Upload!, avatarId: String): QueryResponse!
  addLandlordAtributes(landlordId: String!, attributesInput: [LandlordAttributeInput!]!): QueryResponse!
  removeLandlordAttributes(attributeIds: [String!]!): QueryResponse!
  updateLandlordAttributes(attibuteUpdateInput: [AttributeUpdateInput!]!): QueryResponse!
  setLandlordAvatar(landlordId: String!, image: Upload!, avatarId: String): QueryResponse!
  createBooking(bookingInput: BookingInput!): QueryResponse!
  createPlace(placeInput: PlaceInput!): QueryResponse!
  updatePlace(placeUpdateInput: PlaceUpdateInput!): QueryResponse!
  addPlaceAttributes(placeId: String!, placeAttributeInput: [PlaceAttributeInput!]!): QueryResponse!
  updatePlaceAttributes(attibuteUpdateInput: [AttributeUpdateInput!]!): QueryResponse!
  removePlaceAttributes(attributeIds: [String!]!): QueryResponse!
  uploadPlacePhotos(placeId: String!, images: [Upload!]!): QueryResponse!
}

input UserInput {
  username: String!
  password: String!
  action: Actions
  role: Roles
}

enum Actions {
  LOG_IN
  SIGN_UP
}

enum Roles {
  TENANT
  LANDLORD
  OPERATOR
}

input TenantAttributeInput {
  name: TenantAttributeNames!
  value: String!
}

input AttributeUpdateInput {
  id: String!
  value: String
  valueNumber: Float
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input LandlordAttributeInput {
  name: LandlordAttributeNames!
  value: String!
}

input BookingInput {
  startAt: Float!
  endAt: Float!
  termUnit: TermUnit!
  period: Float!
  totalCharge: Float!
  tenantId: String!
  placeId: String!
}

input PlaceInput {
  name: String!
  address: String!
  city: String!
  country: String!
  area: Float!
  landlordId: String!
  type: [PlaceTypes!]!
  termUnit: [TermUnit!]!
}

input PlaceUpdateInput {
  id: String!
  name: String
  address: String
  city: String
  area: Float
  price: Float
  photos: [String!]
  type: [PlaceTypes!]
}

input PlaceAttributeInput {
  name: PlaceAttributeNames!
  value: String!
  valueNumber: Float!
}